snippet     cond
  (cond
    ((${1}) ${2})
    (${0:else}))

snippet     case
  (case ${1}
    ((${2}) ${3})
    (${0:else}))

# gauche specific
snippet     gauche-testsuite
abbr        (use gauche.test)(test-start ...
options     head
  (use gauche.test)
  (test-start "${1}.scm")

  (load "$1.scm")

  (test* "${2}" ${3:expected} ${4:actual})
snippet +
    (+  ${1}
        ${0})

snippet -
    (-  ${1}
        ${0})

snippet /
    (/  ${1}
        ${0})

snippet *
    (*  ${1}
        ${0})

# Definition
snippet def
    (define (${1:name})
            (${0:definition}))

# Definition with lambda
snippet defl
    (define ${1:name}
            (lambda (x)(${0:definition})))

# Condition
snippet cond
    (cond   ((${1:predicate}) (${2:action}))
            ((${3:predicate}) (${0:action})))

# If statement
snippet if
    (if (${1:predicate})
        (${2:true-action})
        (${0:false-action}))
